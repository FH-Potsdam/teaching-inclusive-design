WEBVTT

00:00:03.600 --> 00:00:07.470
Bei Variablen gibt es eine weitere 
Komplexitätsstufe. Und das sind die  

00:00:07.470 --> 00:00:12.990
sogenannten Scopes, also wo eine Variable 
verfügbar ist. In unserer Boilerplate haben  

00:00:12.990 --> 00:00:16.440
wir verschiedene Funktionen und deren 
Inhalte sind von diesen geschweiften  

00:00:16.440 --> 00:00:22.830
Klammern immer eingefasst. Das ist zum Beispiel 
ein scope. Wir haben also den globalen scope,  

00:00:22.830 --> 00:00:28.170
das ist außerhalb dieser Funktion, sozusagen 
die unterste Ebene in unserem Code und dann,  

00:00:28.170 --> 00:00:34.020
sobald wir in eine Funktion reingehen, sind 
wir einen scope weiter unten. Wenn ich jetzt  

00:00:34.020 --> 00:00:40.380
zum Beispiel eine Variable hier definieren 
würde. Definieren wir mal die backgroundColor.

00:00:40.380 --> 00:00:48.030
Und ich möchte diese jetzt hier unten 
in der background-Funktion nutzen.

00:00:48.030 --> 00:00:58.110
Speicher das Ganze mal ab, dann sehen wir das 
jetzt hier gar nichts erscheint und wenn ich jetzt  

00:00:58.110 --> 00:01:02.880
mal in die Konsole schaue, sehe ich, dass er mir 
hier sagt, das backgroundCcolour nicht definiert  

00:01:02.880 --> 00:01:10.530
ist. Und dies liegt daran, dass backgroundColor 
nur innerhalb dieser Funktion verfügbar ist und  

00:01:10.530 --> 00:01:16.470
deswegen die Funktion hier unten die draw-Funktion 
nicht darauf zugreifen kann. Es gibt einen ganz  

00:01:16.470 --> 00:01:21.240
einfachen Trick wie wir so etwas umgehen 
können. Wir können einfach unsere Variablen  

00:01:21.240 --> 00:01:29.730
am Anfang auf der globalen Ebene definieren. 
Also dafür kopiere ich einfach das hier hoch

00:01:29.730 --> 00:01:38.160
und lösche die Definition. Hiermit 
haben jetzt einfach nur die Variable  

00:01:38.160 --> 00:01:43.080
backgroundColour definiert. Die existiert 
jetzt auf der globalen Ebene. Und jetzt  

00:01:43.080 --> 00:01:49.620
können alle die eine ebene weiter, tiefer oder 
noch tiefer auf diese Variable zugreifen wollen,  

00:01:49.620 --> 00:01:54.360
diese Variable entsprechend verändern. Also wenn 
ich dann jetzt hier in setup zum Beispiel sage,  

00:01:54.360 --> 00:02:00.870
okay, backgroundColor "= 0", dann kann 
auch "draw" darauf zugreifen. Weil man  

00:02:00.870 --> 00:02:04.890
kann immer einen scope nach oben oder 
beliebig viele scopes nach oben gehen,  

00:02:04.890 --> 00:02:11.310
aber man kann nicht scopes nach unten gehen. 
Wenn wir uns später komplexere Funktionen wie  

00:02:11.310 --> 00:02:14.790
die "loops" anschauen werde ich auch noch 
mal auf diese scopes wieder zurückkommen