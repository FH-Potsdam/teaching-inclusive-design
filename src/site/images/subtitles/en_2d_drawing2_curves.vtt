WEBVTT

00:00:05.200 --> 00:00:11.040
In the last video i showed you how to build more 
complex shapes with the vertex function. In this  

00:00:11.040 --> 00:00:17.680
video i will show you how to go beyond that and 
build more complex polygons with curves instead of  

00:00:17.680 --> 00:00:23.120
straight lines. We have three different functions 
to do this and they're getting more complex and  

00:00:23.120 --> 00:00:28.640
with the growing complexity you will gain more 
control about how these curves are actually being  

00:00:28.640 --> 00:00:34.800
generated. The most simple one is the so-called 
curveVertex function. For this we simply need to  

00:00:34.800 --> 00:00:42.720
replace the vertex functions with the curveVertex 
function and now the tool is trying to build a  

00:00:42.720 --> 00:00:49.200
smooth curve through all the vertices that we 
provide as individual points. But we don't have  

00:00:49.200 --> 00:00:56.400
a lot of control about how these curves are being 
exactly generated. If you want more control, there  

00:00:56.400 --> 00:01:03.040
is another function called the quadraticVertex to 
show this one i will reduce it to just one line  

00:01:03.040 --> 00:01:10.800
and go a little bit more into detail here. For 
this one we start with a starting point the  

00:01:10.800 --> 00:01:18.000
vertex this will be the point where our line curve 
should start and then we have the quadraticVertex

00:01:20.560 --> 00:01:26.160
for the quadraticVertex this is now a little 
bit different to the first two vertex functions,  

00:01:26.160 --> 00:01:32.080
because this one takes two x and two y 
coordinates. The first two coordinates  

00:01:32.080 --> 00:01:38.880
are an additional control point. This is similar 
to things you know from graphic editing software  

00:01:38.880 --> 00:01:45.040
like illustrator, figma or sketch. When 
you edit any kind of path, vector path  

00:01:45.040 --> 00:01:49.520
there you get these small little control points, 
these little handles, that you can use to edit  

00:01:49.520 --> 00:01:55.040
how the curves are being generated. And this is 
the same here. I will provide an additional point,  

00:01:55.040 --> 00:01:58.320
i will set it in the middle of 
the line and move it 50 pixels up.

00:02:01.200 --> 00:02:07.920
And now we get this this nice curve. And this 
is also something that i do. When you're working  

00:02:07.920 --> 00:02:12.720
with these more complex curves, it can get 
really complicated, to keep in mind what were  

00:02:12.720 --> 00:02:19.200
my control points what is the target what is the 
starting point. What you can easily do, is simply  

00:02:19.200 --> 00:02:24.000
visualize this and visualize it in a way that you 
already know from your graphics editing software.  

00:02:24.880 --> 00:02:30.560
Let's start by adding a few points 
here. I will change the color to red  

00:02:31.440 --> 00:02:37.600
of our stroke and make the strokeWeight a 
little bit bigger and now add a couple of points  

00:02:37.600 --> 00:02:42.480
first our starting and our target 
point so we have the starting point

00:02:45.840 --> 00:02:50.160
and the target point

00:02:50.160 --> 00:02:52.720
save this so we have little red dots  

00:02:53.360 --> 00:03:00.000
at the beginning and end so then we have our 
control point and this one should be blue

00:03:02.080 --> 00:03:06.400
and this is positioned at 50.

00:03:08.320 --> 00:03:11.680
and to make it make it even more 
clear we can add some lines here  

00:03:12.480 --> 00:03:17.840
and we will simply connect the 
starting point with our control point

00:03:19.280 --> 00:03:23.040
and the destination point with our control point

00:03:25.360 --> 00:03:32.160
and now it's visible. Let's change 
the stroke weight for our lines.

00:03:39.280 --> 00:03:43.360
Now it looks exactly like it looks 
in some graphic editing software.  

00:03:44.480 --> 00:03:49.760
And i will now introduce a little feature 
that we actually learn in the next chapter,  

00:03:49.760 --> 00:03:55.920
when it comes to the input and we could also 
make this of course a variable. Let's change  

00:03:55.920 --> 00:04:01.920
our control point to x and we will use the 
mouseX so the current x position of our mouse  

00:04:03.040 --> 00:04:17.840
and for y we use the mouseY and simply 
replace this here and here and here.

00:04:25.760 --> 00:04:31.440
so now you can even better understand how 
the curve is being generated. Similar to  

00:04:31.440 --> 00:04:37.040
other software you can see how the curve is being 
generated by the control point that we provide.  

00:04:38.000 --> 00:04:42.240
And with the last function we can go even 
a step further by not using one control  

00:04:42.240 --> 00:04:50.800
point but two control points. In this case the 
function is called a bezierVertex and now we add  

00:04:50.800 --> 00:05:00.640
an additional point. And i will simply add it in 
the middle and so now we have one control point  

00:05:01.520 --> 00:05:07.440
for the beginning of the curve and another 
control point for the end of the curve.  

00:05:09.040 --> 00:05:12.960
I will also add a point to 
our second control point.

00:05:17.040 --> 00:05:22.080
Now you can see how the first one is now 
sticky it will stay in the same location  

00:05:22.080 --> 00:05:26.960
because only the first one is controlled 
by the mouse but you can nicely see  

00:05:26.960 --> 00:05:33.200
how the curve is being generated and how much 
control we now have about this curve. You  

00:05:33.200 --> 00:05:38.400
can use these curve functions to do a lot of 
wild things and create interesting new shapes  

00:05:39.120 --> 00:05:42.400
through these different vertex functions 
and you can combine them. you don't need  

00:05:42.400 --> 00:05:46.640
to use only bezier. You can combine the 
different curve functions with one another  

00:05:46.640 --> 00:05:51.840
and just experiment this way by creating new 
interesting shapes in your generative layouts